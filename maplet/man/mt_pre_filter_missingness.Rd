% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mt_pre_filter_missingness.R
\name{mt_pre_filter_missingness}
\alias{mt_pre_filter_missingness}
\title{Filter by missingness}
\usage{
mt_pre_filter_missingness(
  D,
  feat_max = NA,
  samp_max = NA,
  group_col = NA,
  report_filtered = F,
  report_sample_col = ""
)
}
\arguments{
\item{D}{\code{SummarizedExperiment} input.}

\item{feat_max}{Maximum fraction of missing features (between 0 and 1.0). Default: NA.}

\item{samp_max}{Maximum fraction of missing samples (between 0 and 1.0). Default: NA.}

\item{group_col}{Name of of a colData sample annotation column; feat_max will be applied to each group separately,
feature must have at most feat_max in any of the groups. Default: NA.}

\item{report_filtered}{Write list of filtered features into the status log text? Default: F.}

\item{report_sample_col}{Required if report_filtered=T for sample filtering. Specifies which column of colData() to
output into the status log. Default: ''.}
}
\value{
assay: Rows or columns will be filtered.

$results$output: Logical vector of kept features/samples.
}
\description{
Filters either samples or features by fraction of missing values. Won't do both in one call.
}
\examples{
\dontrun{# first remove samples with >10\% missingness, then features with >20\% missingness
... \%>\%
  mt_pre_filter_missingness(samp_max=0.1) \%>\%
  mt_pre_filter_missingness(feat_max=0.2) \%>\%
...}

}
\author{
JK
}
